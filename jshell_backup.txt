System.out.println("Hello World!");
void helloworld() {
    System.out.println("Hello World!");
}
helloworld();
void sayHelloWorldTwice() {
    System.out.println("Hello World!");
    System.out.println("Hello World!");
}
sayHelloWorldTwice()
for (int i = 0; i < 10; i++) {
    sayHelloWorldTwice();
}
sayHelloWorldTwice()
void sayHelloWorld(int count) {
    for (int i = 0; i < count; i++) {
        System.out.println("Hello World!!!");
    }
}
sayHelloWorld(15);
void printSquaresOfNumbers(int num) {
    for (int i = 1; i <= num; i++) {
        System.out.println(i * i);
    }
}
printSquaresOfNumbers(10);
printSquaresOfNumbers(100);
1 + 1
7 * 11 * 13 * 17
7 * 11 * 13 * 19
7 * 11 * 13
float a = 1.3f;
a == b
a - b
a + b
b - a
void gugudan(int num) {
    for (int i = 1; i <= 9; i++) {
        System.out.printf("%d X %d = %d", num, i, num * i).println();
    }
}
gugudan(5);
gugudan(50);
void gugudan() {
    for (int i = 1; i <= 9; i++) {
        System.out.printf("%d X %d = %d", 5, i, 5 * i).println();
    }
}
gugudan();
gugudan(15);
int multiply(int a, int b) {
    return a * b;
}
c
c
multiply(5, 15);
Math.min(5, 15);
int multiply(int a) {
    return multiply(5, a);
}
d
3
Country ctr;
1
class Planet {
    void revolve() {
        System.out.println("Revolving...");
    }
}
Planet earth = new Planet();
earth.revolve();
Planet venus = new Planet();
venus.revolve();
earth
class Country {
    void comingSoon() {
        System.out.println("Coming...");
    }
}
Country usa = new Country();
usa.comingSoon()
Byte.SIZE
Byte.BYTES
Byte.MAX_VALUE
Integer.BYTES
Short.BYTES
Long.BYTES
Integer.MAX_VALUE
Short.MAX_VALUE
Byte.MIN_VALUE
long l = 50000000000000000l;
l = i;
l
char c;
c
c
c = (char) i;
c = (char) 123;
c
c += 1;
c
++c;
c % 2
c % 3
(int) c
int eight = 010;
eight
int sixteen = 0x10;
sixteen = 0X10;
int big = 0XBBAACC;
l
l = 10101010101010100l;
l
i
s
short s = (short) i;
s
public class BiNumber {
    private int number1;
    private int number2;
    
    public BiNumber(int number1, int number2) {
        this.number1 = number1;
        this.number2 = number2;
    }
    
    public int getNumber1() {
        return number1;
    }
    
    public int getNumber2() {
        return number2;
    }
    
    public int add() {
        return number1 + number2;
    }
    
    public int multiply() {
        return number1 * number2;
    }
    
    public void doubleNumbers() {
        number1 *= 2;
        number2 *= 2;
    }
}
double dbl = 34.5678;
d
f
double d = f;
d
float f = (float) d;
d
d = 34.5678
d % 5
float f2 = (float) d;
34.56789876 + 34.2234
BigDecimal number1 = new BigDecimal("34.56789876");
BigDecimal number2 = new BigDecimal("34.2234");
number1.add(number2);
BigDecimal number3 = number1.add(number2);
number1
number2
number3
number1.min(number2);
BigDecimal number = new BigDecimal("11.5");
3.5 + 3.5
3.5 + 3.5 == 7
3.4 + 3.6 == 7
3.3 + 3.7 == 7
7/2 + 7/2 == 7
7/2 + 7/2
7/3 + 7/3 + 7/3
number.add(new BigDecimal(5));
number.add(new BigDecimal(5.5));
number.add(new BigDecimal(5.3));
10000 * 5.3
5.3
new BigDecimal(5.3);
1 * 5.3
5.3 + 0.7
5.3 + 0.7 == (int) 6
(i >= 15) && (i <= 25);
(i >= 15) & (i <= 25);
!true
true | false
0 | 1
0 | -1
-1 | 0
1 | -1
-1 | 1
2 | 4
2 | 3
4 | 5
4 | 6
4 | 2
3 | 2
int j = 15;
j > 15 && i++ > 5
j
i
j > 15 & i++ > 5
j
i
j > 10 & i++ > 5
j
i
i++ > 5 & j > 15
i
ch
ch += 1
(int) ch
(int) 'A';
(int) 'a';
(char) 33;
char ch2 = '\u1234';
ch2
ch2 + ch
(char) (ch2+ch);
(char) '\u9939'
char ch = 65;
int i = 65;
i = (char) i
char cch = (char) i;
cch
byte bb = 1;
bb
cch + bb
bb